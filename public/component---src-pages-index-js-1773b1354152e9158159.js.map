{"version":3,"file":"component---src-pages-index-js-1773b1354152e9158159.js","mappings":"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","sources":["webpack://hufschuhapp.frontend/./src/assets/icons/HorseHead.js","webpack://hufschuhapp.frontend/./src/components/App/Misc/Logo.js","webpack://hufschuhapp.frontend/./src/components/App/Misc/ProfilePicWrapper.js","webpack://hufschuhapp.frontend/./src/constants/breakpoints.js","webpack://hufschuhapp.frontend/./src/components/App/ListView/styled.js","webpack://hufschuhapp.frontend/./src/components/App/ListView/AddHorseModal/styled.js","webpack://hufschuhapp.frontend/./src/assets/icons/Trash.js","webpack://hufschuhapp.frontend/./src/components/App/ListView/AddHorseModal/index.tsx","webpack://hufschuhapp.frontend/./src/components/App/ListView/HorseList/styled.js","webpack://hufschuhapp.frontend/./src/components/App/ListView/Placeholder/styled.js","webpack://hufschuhapp.frontend/./src/components/App/ListView/Placeholder/index.js","webpack://hufschuhapp.frontend/./src/assets/icons/Edit.js","webpack://hufschuhapp.frontend/./src/assets/icons/PlusIcon.js","webpack://hufschuhapp.frontend/./src/components/App/ListView/HorseList/index.tsx","webpack://hufschuhapp.frontend/./src/components/App/ListView/index.tsx","webpack://hufschuhapp.frontend/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\n\nexport const HorseHead = ({\n  fill,\n  stroke,\n  strokeLinecap,\n  strokeLinejoin,\n  strokeWidth,\n}) => {\n  const style = {\n    fill: fill || \"none\",\n    stroke: stroke || \"#000\",\n    strokeLinecap: strokeLinecap || \"round\",\n    strokeLinejoin: strokeLinejoin || \"round\",\n    strokeWidth: strokeWidth || \"2px\",\n  };\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n      <path d=\"M 23 4 C 20.957031 4 19.695313 5.207031 19 6.15625 L 19 5 C 3.183594 5 3 27.769531 3 28 L 7 28 C 7 28 6.984375 23.125 8.53125 18.3125 C 9.304688 15.90625 10.480469 13.527344 12.15625 11.8125 C 13.832031 10.097656 15.972656 9 19 9 L 19.625 9 L 19.90625 8.4375 C 19.90625 8.4375 20.792969 6.953125 22 6.3125 L 22 9.25 L 26.09375 17.4375 L 26.1875 17.59375 L 26.3125 17.71875 C 26.714844 18.097656 26.867188 18.457031 26.9375 18.6875 C 26.992188 18.855469 26.96875 18.851563 26.96875 18.875 C 26.941406 18.972656 26.898438 19.183594 26.71875 19.46875 C 26.5 19.816406 26.304688 20 26 20 C 25.695313 20 25.5 19.816406 25.28125 19.46875 C 25.0625 19.121094 24.96875 18.75 24.96875 18.75 L 24.75 17.90625 L 23.875 18 C 23.875 18 23.042969 18.097656 22.125 17.84375 C 21.207031 17.589844 20.339844 17.140625 19.96875 15.75 L 19.625 14.46875 L 18.5 15.125 C 17.207031 15.882813 16.457031 17.039063 16.3125 18.21875 C 16.167969 19.398438 16.515625 20.535156 16.9375 21.65625 C 17.777344 23.898438 19 26.183594 19 28 L 21 28 C 21 25.378906 19.535156 22.945313 18.78125 20.9375 C 18.40625 19.933594 18.234375 19.085938 18.3125 18.46875 C 18.359375 18.09375 18.511719 17.773438 18.78125 17.46875 C 19.542969 18.660156 20.585938 19.503906 21.59375 19.78125 C 22.523438 20.039063 22.902344 19.957031 23.34375 19.9375 C 23.433594 20.171875 23.40625 20.230469 23.59375 20.53125 C 24 21.183594 24.804688 22 26 22 C 27.195313 22 28 21.183594 28.40625 20.53125 C 28.8125 19.878906 28.96875 19.25 28.96875 19.25 L 29 19.15625 L 29 19.0625 C 29 19.0625 29.007813 18.582031 28.84375 18.0625 C 28.707031 17.625 28.347656 17.09375 27.875 16.5625 L 27.90625 16.5625 L 24 8.75 L 24 4 Z M 18.46875 7.03125 C 18.464844 7.039063 18.441406 7.054688 18.4375 7.0625 C 18.03125 7.082031 17.636719 7.101563 17.25 7.15625 C 16.9375 7.199219 16.640625 7.277344 16.34375 7.34375 C 16.640625 7.265625 16.9375 7.207031 17.25 7.15625 C 17.640625 7.089844 18.050781 7.050781 18.46875 7.03125 Z M 22 12 C 21.449219 12 21 12.449219 21 13 C 21 13.550781 21.449219 14 22 14 C 22.550781 14 23 13.550781 23 13 C 23 12.449219 22.550781 12 22 12 Z\" />\n    </svg>\n  );\n};\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst LogoWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport default function Logo() {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          logoBig: file(relativePath: { eq: \"logoBig.png\" }) {\n            childImageSharp {\n              gatsbyImageData(width: 400, layout: CONSTRAINED)\n            }\n          }\n        }\n      `}\n      render={(data) => (\n        <LogoWrapper>\n          <GatsbyImage\n            image={data.logoBig.childImageSharp.gatsbyImageData}\n            alt={\"Equilandoo Logo\"}\n          />\n        </LogoWrapper>\n      )}\n    />\n  );\n}\n","import styled from \"styled-components\";\nimport colors from \"../../../constants/colors\";\nimport { spacing } from \"../../../constants/spacing\";\n\nexport const ProfilePicWrapper = styled.div`\n  border-radius: 99px;\n  border-width: 1px;\n  border-color: ${colors.greys[\"500\"]};\n  overflow: hidden;\n\n  background-color: ${colors.greys[\"50\"]};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  svg {\n    path {\n      //stroke: ${colors.primary[\"80\"]};\n      fill: ${colors.greys[\"300\"]};\n    }\n  }\n\n  &.small {\n    width: ${spacing.spaceXl};\n\n    height: ${spacing.spaceXl};\n    svg {\n      width: ${spacing.spaceXl};\n      height: ${spacing.spaceXl};\n\n      margin-left: -6px;\n      margin-top: 3px;\n    }\n\n    img {\n      width: ${spacing.spaceXl};\n      // height: ${spacing.spaceXl};\n    }\n  }\n\n  &.large {\n    width: ${spacing.space2xl};\n    min-width: ${spacing.space2xl};\n    height: ${spacing.space2xl};\n\n    svg {\n      width: ${spacing.space2xl};\n      height: ${spacing.space2xl};\n\n      //margin-left: -12px;\n      //margin-top: 12px;\n    }\n\n    img {\n      width: ${spacing.space2xl};\n      // height: ${spacing.space2xl};\n    }\n  }\n`;\n","const breakpoints = {\n  small: \"360px\",\n  w400: \"400px\",\n  big: \"800px\",\n};\n\nexport default breakpoints;\n\n\n// const breakpoints = {\n//   xxSmall: 320,\n//   extraSmall: 414,    // mobile phone\n//   small: 600,         // small phone landscape\n//   smallmedium: 750,\n//   medium: 1000,        // big phone landscape / tablets\n//   large: 1280,        // tablets\n//   extraLarge: 1920,   // desktops\n// };\n","import styled from \"styled-components\";\nimport dimensions from \"../../../constants/dimensions\";\nimport { spacing } from \"../../../constants/spacing\";\nimport colors from \"../../../constants/colors\";\n\nexport const ListViewWrapper = styled.div`\n  height: calc(100vh - ${dimensions.headerHeight});\n  width: 100%;\n  overflow-y: clip;\n\n  margin: 0 auto;\n`;\n","import styled from \"styled-components\";\nimport { spacing } from \"../../../../constants/spacing\";\nimport color from \"../../../../constants/colors\";\nimport fontSize from \"../../../../constants/typeScale\";\nimport borderRadius from \"../../../../constants/borderRadius\";\nimport colors from \"../../../../constants/colors\";\n\nexport const AddHorseForm = styled.form`\n  height: 100vh;\n  width: 100%;\n  padding: ${spacing.spaceMd} 0 0 0;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  background-color: ${colors.pink[\"0\"]};\n\n  * + .form-row {\n    margin-top: ${spacing.spaceLg};\n  }\n\n  .form-meta {\n    h2 {\n      margin: 0 0 ${spacing.space3xs};\n      font-size: ${fontSize.textLg};\n      font-weight: 600;\n    }\n\n    p {\n      margin: 0;\n      color: ${colors.text.secondary};\n      font-size: ${fontSize.textSm};\n    }\n  }\n\n  .input-group {\n    display: flex;\n    flex-direction: column;\n\n    label {\n      color: ${color.greys[\"800\"]};\n      margin-bottom: ${spacing.space2xs};\n      font-size: ${fontSize.textSm};\n      font-weight: 600;\n    }\n\n    .input {\n      padding: ${spacing.space3xs} ${spacing.space2xs};\n\n      border-style: solid;\n      border-width: 1px;\n      border-radius: ${borderRadius.small};\n      border-color: ${colors.greys[\"300\"]};\n      font-size: ${fontSize.textMd};\n    }\n  }\n\n  .picture-input-row {\n    display: flex;\n    align-items: center;\n\n    input {\n      display: none;\n    }\n\n    .input-file {\n      //height: ${spacing.spaceMd};\n      width: 100px;\n      margin: 0 0 0 ${spacing.spaceMd};\n      padding: ${spacing.space3xs} ${spacing.space2xs};\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      \n      \n\n      padding: ${spacing.spaceXs};\n\n      color: ${colors.primary[\"170\"]};\n      border-style: solid;\n      border-width: 1px;\n      border-radius: ${borderRadius.small};\n      font-size: ${fontSize.textMd};\n      letter-spacing: 0.12em;\n      cursor: pointer;\n\n      background-color: white;\n      color: ${colors.pineGreen[\"80\"]};\n    }\n  }\n\n  .button-row {\n    padding-right: ${spacing.spaceXs};\n    box-sizing: border-box;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  .delete-horse {\n    display: flex;\n    align-items: center;\n    padding: 0;\n    margin: ${spacing.spaceLg} 0 0 0;\n\n    color: ${colors.red.defaut};\n    border-style: none;\n    background-color: transparent;\n    cursor: pointer;\n\n    svg {\n      stroke: ${colors.red.defaut} !important;\n      height: 16px;\n      width: 16px;\n      margin-right: ${spacing.space3xs};\n    }\n\n    &:hover,\n    &:focus {\n      color: ${colors.red.dark};\n\n      svg {\n        stroke: ${colors.red.dark} !important;\n      }\n    }\n  }\n\n  .message {\n    margin: ${spacing.spaceMd} 0 0 0;\n    color: red;\n  }\n`;\n","import React from \"react\";\n\nexport const TrashIcon = ({\n  fill,\n  stroke,\n  strokeLinecap,\n  strokeLineJoin,\n  strokeWidth,\n}) => {\n  const style = {\n    fill: fill || \"none\",\n    stroke: stroke || \"#000\",\n    strokeLinecap: strokeLinecap || \"round\",\n    strokeLineJoin: strokeLineJoin || \"round\",\n    strokeWidth: strokeWidth || \"2\",\n  };\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      style={style}\n    >\n      <polyline points=\"3 6 5 6 21 6\"></polyline>\n      <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n      <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n      <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n    </svg>\n  );\n};\n","import React, { SyntheticEvent, useEffect, useState } from \"react\";\nimport { HorseHead } from \"../../../../assets/icons/HorseHead\";\nimport { Button } from \"../../Misc/Button\";\nimport { AddHorseForm } from \"./styled\";\nimport { ProfilePicWrapper } from \"../../Misc/ProfilePicWrapper\";\nimport { TrashIcon } from \"../../../../assets/icons/Trash\";\nimport * as Sentry from \"@sentry/gatsby\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../../redux/store\";\nimport { Horse, User } from \"../../../../redux/types\";\nimport _ from \"lodash\";\nimport {\n  horseApi,\n  useCreateHorseMutation,\n  useDeleteHorseMutation,\n  useHorseQuery,\n  useUpdateHorseMutation,\n} from \"../../../../redux/api/horseApi\";\nimport { useParams } from \"@reach/router\";\n\ntype ModalProps = {\n  closeModal: () => void;\n  cms: any;\n  isOpen: boolean;\n  horses: Horse[];\n};\n\nexport default function Modal({ closeModal, cms, isOpen }: ModalProps) {\n  // global state\n  const user = useSelector((state: RootState) => state.auth.user) as User;\n\n  const { horseId } = useParams();\n\n  const {\n    data: horseData,\n    isFetching,\n    isLoading,\n  } = useHorseQuery(\n    { userId: user?.id as string, horseId },\n    {\n      refetchOnMountOrArgChange: true,\n      skip: !user?.id || !horseId,\n    }\n  );\n\n  const { refetch } = horseApi.endpoints.horse.useQuerySubscription(\n    {\n      userId: user?.id as string,\n      horseId,\n    },\n    {\n      refetchOnMountOrArgChange: true,\n      skip: !user?.id || !horseId,\n    }\n  );\n\n  type StateType = {\n    name: string;\n    profilePicture: string;\n  };\n  const initialState = { name: \"\", profilePicture: \"\" };\n\n  const [state, setState] = useState<StateType>(horseData || initialState);\n  const fileInput = React.createRef();\n  const [fileInputChange, setFileInputChange] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const [createHorse] = useCreateHorseMutation();\n\n  const [updateHorse] = useUpdateHorseMutation();\n\n  const [deleteHorse] = useDeleteHorseMutation();\n\n  useEffect(() => {\n    if (horseData && horseId && user?.id) {\n      setState(_.pick(horseData, [\"name\", \"profilePicture\"]));\n    } else {\n      setState(initialState);\n    }\n  }, [horseData, isOpen]);\n\n  useEffect(() => {\n    if (isOpen && horseId && user?.id) {\n      refetch();\n    }\n  }, [horseId, isOpen]);\n\n  useEffect(() => {\n    if (isOpen && horseId && user?.id) {\n      setState(_.pick(horseData, [\"name\", \"profilePicture\"]));\n    }\n  }, [isLoading]);\n\n  function onInputChange(event: SyntheticEvent) {\n    event.persist();\n\n    setState((prevState: StateType) => ({\n      ...prevState,\n      // @ts-ignore\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  function onSubmit(event: SyntheticEvent, state: StateType) {\n    event.preventDefault();\n\n    if (!state.name) {\n      setMessage(cms.Alle_Felder);\n      return;\n    }\n\n    if (!state.profilePicture) {\n      setMessage(cms.Kein_Bild);\n      return;\n    }\n\n    const patch = {\n      name: state.name,\n      ...(state.profilePicture && { profilePicture: state.profilePicture }),\n    };\n\n    if (horseId) {\n      // patch name\n      updateHorse({\n        userId: user?.id,\n        horseId: horseId,\n        data: patch,\n      }).then((result) => {\n        // @ts-ignore\n        if (result.error) {\n          // @ts-ignore\n          Sentry.captureException(result.error);\n          setMessage(cms.Fehler);\n\n          // @ts-ignore\n          if (result.error.response.status === 413) {\n            // image too large\n            setMessage(\"Das Bild ist zu groß.\");\n          }\n          return;\n        }\n        closeModal();\n      });\n    } else {\n      // create new pferde\n      createHorse({\n        userId: user?.id,\n        data: patch,\n      }).then((result) => {\n        // @ts-ignore\n        if (result.error) {\n          // @ts-ignore\n          Sentry.captureException(result.error);\n          setMessage(cms.Fehler);\n          return;\n        }\n        closeModal();\n      });\n    }\n  }\n\n  useEffect(() => {\n    // @ts-ignore\n    if (fileInput?.current?.files && fileInput?.current?.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        // @ts-ignore\n        setState((prevState) => ({\n          ...prevState,\n          // @ts-ignore\n          profilePicture: event.target.result,\n        }));\n      };\n      // @ts-ignore\n      reader.readAsDataURL(fileInput.current.files[0]);\n    }\n  }, [fileInputChange]);\n\n  function onReset() {\n    closeModal();\n  }\n\n  if (isLoading || isFetching) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <AddHorseForm\n      onSubmit={(event: React.SyntheticEvent) => onSubmit(event, state)}\n      onReset={onReset}\n    >\n      <div className={\"form-meta\"}>\n        <h2>{horseId ? cms.Titel_Pferd_Bearbeiten : cms.Titel}</h2>\n        <p>{cms.Hinweis}</p>\n      </div>\n\n      <div className={\"input-group form-row\"}>\n        <label htmlFor={\"new-pferde-name\"}>{cms.Input_Name}</label>\n        <input\n          id={\"new-pferde-name\"}\n          name={\"name\"}\n          type={\"text\"}\n          value={state.name}\n          className={\"input\"}\n          onChange={(event) => {\n            onInputChange(event);\n          }}\n        />\n      </div>\n      <div className={\"input-group form-row\"}>\n        <label>{cms.Input_Foto}</label>\n        <div className={\"picture-input-row\"}>\n          <ProfilePicWrapper className={\"small\"}>\n            {state.profilePicture ? (\n              <img\n                id=\"Profilbild Platzhalter\"\n                src={state.profilePicture}\n                alt=\"Profilbild Platzhalter\"\n              />\n            ) : (\n              <HorseHead\n                fill={undefined}\n                stroke={undefined}\n                strokeLinecap={undefined}\n                strokeLinejoin={undefined}\n                strokeWidth={undefined}\n              />\n            )}\n          </ProfilePicWrapper>\n          <label htmlFor=\"file-upload\" className=\"input input-file\">\n            {cms.Input_Foto_Aendern}\n          </label>\n\n          <input\n            id=\"file-upload\"\n            type=\"file\"\n            name={\"imageSrc\"}\n            // @ts-ignore\n            ref={fileInput}\n            accept={\"image/png, image/jpeg\"}\n            onChange={() => {\n              setFileInputChange(!fileInputChange);\n            }}\n          />\n        </div>\n      </div>\n\n      {horseData?.id ? (\n        <button\n          className={\"delete-pferde\"}\n          onClick={async () => {\n            await deleteHorse({ userId: user?.id, horseId: horseId });\n            closeModal();\n          }}\n          style={{\n            display: horseId ? \"flex\" : \"none\",\n            color: \"red\",\n            marginTop: \"1rem\",\n            backgroundColor: \"transparent\",\n            border: \"none\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            gap: \"0.5rem\",\n            cursor: \"pointer\",\n          }}\n          type={\"button\"}\n        >\n          <TrashIcon\n            fill={undefined}\n            stroke={undefined}\n            strokeLinecap={undefined}\n            strokeLineJoin={undefined}\n            strokeWidth={undefined}\n          />{\" \"}\n          {cms.Pferd_Loeschen}\n        </button>\n      ) : (\n        \"\"\n      )}\n\n      <p className={\"message\"}>{message}</p>\n\n      <div className={\"form-row button-row\"}>\n        <Button className={\"secondary\"} type={\"reset\"}>\n          {cms.Abbrechen}\n        </Button>\n        <Button className={\"primary\"} type={\"submit\"}>\n          {cms.Speichern}\n        </Button>\n      </div>\n    </AddHorseForm>\n  );\n}\n","import styled from \"styled-components\";\nimport dimensions from \"../../../../constants/dimensions\";\nimport { spacing } from \"../../../../constants/spacing\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport fontSize from \"../../../../constants/typeScale\";\nimport colors from \"../../../../constants/colors\";\nimport borderRadius from \"../../../../constants/borderRadius\";\nimport breakpoints from \"../../../../constants/breakpoints\";\n\nexport const HorseListWrapper = styled.section`\n  height: ${(props) => {\n    const { show } = props;\n    return show ? \"100vh\" : \"0px\";\n  }};\n  width: 100%;\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  overflow-y: hidden;\n\n  transition: height 0.7s ease-in-out;\n\n  .add-horse {\n    position: fixed;\n    bottom: ${spacing.spaceXs};\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    align-self: center;\n\n    background-color: white;\n    border-style: none;\n    border-width: 0px;\n    cursor: pointer;\n    border-radius: 999999px;\n\n    &:hover,\n    &:focus {\n      background-color: ${colors.pink[\"20\"]};\n    }\n  }\n`;\n\nexport const HorseProfilePic = styled(GatsbyImage)`\n  // default styles for gatsby-image are inline\n  // !important necessary to overwrite them, or use style prop\n  height: 128px !important;\n`;\n\nexport const HorseUl = styled.ul`\n  width: calc(100% - 6px);\n  // padding for box shadow\n  padding: 0 0 6px 0;\n  margin-bottom: 64px;\n\n  overflow-y: scroll;\n\n  list-style: none;\n\n  li + li {\n    margin-top: ${spacing.spaceXs};\n  }\n\n  li {\n    display: grid;\n    grid-template-columns: auto minmax(auto, 100px);\n    grid-column-gap: ${spacing.spaceXs};\n  }\n\n  .horse-button {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    padding: ${spacing.spaceSm} ${spacing.space2xs};\n    background-color: ${colors.pineGreen[\"40\"]};\n    border-radius: ${borderRadius.large};\n    cursor: pointer;\n\n    box-shadow: hsl(0, 0%, 60%) 2px 2px 4px;\n\n    &:hover,\n    &:focus {\n      background-color: ${colors.pineGreen[\"70\"]};\n\n      .horse-name {\n        color: white !important;\n      }\n    }\n\n    @media (max-width: ${breakpoints.w400}) {\n      min-width: 0;\n      padding: ${spacing.space3xs} ${spacing.space3xs};\n    }\n  }\n\n  .link {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    text-decoration: none;\n\n    padding-right: ${spacing.spaceMd};\n\n    .horse-image {\n      margin: 0 ${spacing.spaceMd} 0 0;\n    }\n\n    .horse-name {\n      display: flex;\n      align-items: center;\n      min-width: ${spacing.space4xl};\n\n      font-size: ${fontSize.textLg};\n      font-weight: 600;\n\n      color: ${colors.text.primary};\n\n      margin-left: ${spacing.spaceMd};\n    }\n\n    @media (max-width: ${breakpoints.w400}) {\n      .horse-image {\n        margin: 0 ${spacing.space2xs} 0 0;\n      }\n      .horse-name {\n        font-size: ${fontSize.textMd};\n      }\n    }\n  }\n\n  .edit-button {\n    display: flex;\n    align-content: center;\n    justify-content: center;\n    padding: ${spacing.spaceXs};\n\n    cursor: pointer;\n    background-color: white;\n    border-style: solid;\n    border-width: 1px;\n    border-color: ${colors.pineGreen[\"80\"]};\n    border-radius: ${borderRadius.medium};\n    box-shadow: hsl(0, 0%, 60%) 2px 2px 4px;\n\n    span {\n      margin: auto;\n      height: 16px;\n      display: flex;\n      align-content: center;\n      justify-content: center;\n      font-size: 16px;\n      line-height: 16px;\n    }\n\n    svg {\n      margin-right: ${spacing.spaceXs};\n      height: 16px;\n      width: 16px;\n    }\n\n    @media (max-width: ${breakpoints.w400}) {\n      padding: ${spacing.space2xs};\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport colors from \"../../../../constants/colors\";\nimport { spacing } from \"../../../../constants/spacing\";\nimport borderRadius from \"../../../../constants/borderRadius\";\n\nexport const PlaceholderWrapper = styled.div`\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  \n  .svg-wrapper {\n    width: ${spacing.space4xl};\n    height: ${spacing.space4xl};\n\n    border-radius: 99px;\n    //border-style: solid;\n    border-width: 1px;\n    border-color: ${colors.greys[\"500\"]};\n    overflow: hidden;\n\n    background-color: ${colors.greys[\"50\"]};\n  }\n\n  svg {\n    width: 132px;\n    height: 132px;\n\n    margin-left: -12px;\n    margin-top: 12px;\n\n    path {\n      //stroke: ${colors.primary[\"80\"]};\n      fill: ${colors.greys[\"300\"]};\n    }\n  }\n\n  p {\n    width: 90%;\n    color: ${colors.greys[\"500\"]};\n    text-align: center;\n  }\n`;\n","import React from \"react\";\nimport { PlaceholderWrapper } from \"./styled\";\nimport { HorseHead } from \"../../../../assets/icons/HorseHead\";\nimport { Button } from \"../../Misc/Button\";\n\nexport default function Placeholder({ openModal, cms }) {\n  return (\n    <PlaceholderWrapper>\n      <div className={\"svg-wrapper\"}>\n        <HorseHead />\n      </div>\n      <p>{cms.CTA}</p>\n      <Button onClick={openModal} className={\"primary\"}>\n        {cms.Button}\n      </Button>\n    </PlaceholderWrapper>\n  );\n}\n","import React from \"react\";\n\nexport const EditIcon = ({\n  fill,\n  stroke,\n  strokeLinecap,\n  strokeLinejoin,\n  strokeWidth,\n  width,\n  height,\n}) => {\n  const style = {\n    fill: fill || \"none\",\n    stroke: stroke || \"#000\",\n    strokeLinecap: strokeLinecap || \"round\",\n    strokeLinejoin: strokeLinejoin || \"round\",\n    strokeWidth: strokeWidth || \"2px\",\n  };\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      viewBox=\"0 0 24 24\"\n      {...style}\n    >\n      <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\n      <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport colors from \"../../constants/colors\";\n\nexport const PlusIcon = ({\n  fill,\n  stroke,\n  strokeLinecap,\n  strokeLineJoin,\n  strokeWidth,\n}) => {\n  const style = {\n    fill: fill || \"none\",\n    // stroke: stroke || \"#000\",\n    strokeLinecap: strokeLinecap || \"round\",\n    strokeLineJoin: strokeLineJoin || \"round\",\n    strokeWidth: \"1px\", //strokeWidth || \"62px\",\n    height: \"64px\",\n    width: \"64px\",\n  };\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"64\"\n      height=\"64\"\n      viewBox=\"0 0 52 52\"\n      style={style}\n    >\n      <path\n        // style={style}\n\n        d=\"M26 0C11.664 0 0 11.663 0 26s11.664 26 26 26 26-11.663 26-26S40.336 0 26 0zm0 50C12.767 50 2 39.233 2 26S12.767 2 26 2s24 10.767 24 24-10.767 24-24 24z\"\n      />\n      <path\n        // style={style}\n        d=\"M38.5 25H27V14c0-.553-.448-1-1-1s-1 .447-1 1v11H13.5c-.552 0-1 .447-1 1s.448 1 1 1H25v12c0 .553.448 1 1 1s1-.447 1-1V27h11.5c.552 0 1-.447 1-1s-.448-1-1-1z\"\n      />\n    </svg>\n  );\n};\n","import { Link } from \"gatsby\";\nimport routes from \"../../../../constants/routes\";\nimport React  from \"react\";\nimport { HorseListWrapper, HorseUl } from \"./styled\";\nimport Placeholder from \"../Placeholder\";\nimport { ProfilePicWrapper } from \"../../Misc/ProfilePicWrapper\";\nimport { EditIcon } from \"../../../../assets/icons/Edit\";\nimport { PlusIcon } from \"../../../../assets/icons/PlusIcon\";\nimport colors from \"../../../../constants/colors\";\nimport Logo from \"../../Misc/Logo\";\nimport { HorseHead } from \"../../../../assets/icons/HorseHead\";\nimport { Horse } from \"../../../../redux/types\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  SelectedHorse,\n  setSelectedHorse,\n} from \"../../../../redux/appState/appStateSlice\";\n\ntype HorseListProps = {\n  horses: Horse[];\n  show: boolean;\n  openModal: () => void;\n  isModalOpen: boolean;\n  cms: any;\n};\n\nexport default function HorseList({\n  horses,\n  show,\n  openModal,\n  isModalOpen,\n  cms,\n}: HorseListProps) {\n  // reset selected Horse when this site is opened\n  // useEffect(() => {\n  //   if (typeof window !== \"undefined\") {\n  //     patchSelectedHorse({ id: null, target: null, pos: null });\n  //   }\n  // }, []);\n\n  const dispatch = useDispatch();\n\n  const selectHorse = (selectedHorse: SelectedHorse) => {\n    dispatch(setSelectedHorse({ selectedHorse }));\n  };\n\n  return (\n    // @ts-ignore\n    <HorseListWrapper show={show}>\n      <Logo />\n      <p style={{ margin: \"0 auto\" }}>{cms.Erklaerung}</p>\n      <HorseUl>\n        {horses.length ? (\n          horses.map((horse: Horse, index) => {\n            return (\n              <li key={\"pferde-\" + index}>\n                <Link\n                  onClick={() => selectHorse({ id: horse.id })}\n                  to={routes.detailView(horse.id)}\n                  className={\"link pferde-button\"}\n                >\n                  <ProfilePicWrapper className={\"large pferde-image\"}>\n                    {horse.profilePicture ? (\n                      <img\n                        src={horse.profilePicture}\n                        alt={\"Pferd Profilbild\"}\n                      />\n                    ) : (\n                      <HorseHead\n                        fill={undefined}\n                        stroke={undefined}\n                        strokeLinecap={undefined}\n                        strokeLinejoin={undefined}\n                        strokeWidth={undefined}\n                      />\n                    )}\n                  </ProfilePicWrapper>\n                  <p className={\"horse-name\"}>{horse.name}</p>\n                </Link>\n\n                <button\n                  className={\"edit-button\"}\n                  onClick={() => {\n                    console.log(\"selecting\", horse.id);\n                    selectHorse({ id: horse.id });\n                    openModal();\n                  }}\n                >\n                  <span>\n                    <EditIcon\n                      fill={undefined}\n                      stroke={undefined}\n                      strokeLinecap={undefined}\n                      strokeLinejoin={undefined}\n                      strokeWidth={undefined}\n                      width={undefined}\n                      height={undefined}\n                    />{\" \"}\n                    Edit\n                  </span>\n                </button>\n              </li>\n            );\n          })\n        ) : (\n          <Placeholder openModal={openModal} cms={cms.Platzhalter} />\n        )}\n      </HorseUl>\n\n      <button\n        className={\"add-horse\"}\n        style={{\n          display: Object.keys(horses).length && !isModalOpen ? \"flex\" : \"none\",\n        }}\n        onClick={openModal}\n      >\n        <PlusIcon\n          fill={colors.pineGreen[\"80\"]}\n          stroke={colors.pineGreen[\"80\"]}\n          strokeLinecap={undefined}\n          strokeLineJoin={undefined}\n          strokeWidth={undefined}\n        />\n      </button>\n    </HorseListWrapper>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport { ListViewWrapper } from \"./styled\";\nimport Modal from \"./AddHorseModal\";\nimport HorseList from \"./HorseList\";\nimport { RootState, useAppDispatch } from \"../../../redux/store\";\nimport { useHorsesQuery } from \"../../../redux/api/horseApi\";\nimport {\n  initialAppState,\n  setSelectedHorse,\n} from \"../../../redux/appState/appStateSlice\";\n\n/**\n * displays the pferde list or a modal to add a new pferde, depending on state\n * @param cms - relevant content for this component from strapi\n * @returns {JSX.Element}\n */\nfunction ListViewComponent({ cms }: { cms: any }) {\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  const dispatch = useAppDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  // if a pferde is selected, the modal is going to show its name and picture\n  // otherwise it's creating a new pferde\n\n  const { data: horseData } = useHorsesQuery(user?.id as string, {\n    refetchOnMountOrArgChange: true,\n    skip: !user?.id,\n  });\n\n  useEffect(() => {\n    console.log(horseData);\n  }, [horseData]);\n\n  return (\n    <ListViewWrapper>\n      <HorseList\n        show={!isModalOpen}\n        openModal={() => setIsModalOpen(true)}\n        isModalOpen={isModalOpen}\n        // @ts-ignore\n        horses={horseData || []}\n        cms={cms}\n      />\n      <Modal\n        closeModal={() => {\n          setIsModalOpen(false);\n          dispatch(\n            setSelectedHorse({ selectedHorse: initialAppState.selectedHorse })\n          );\n        }}\n        cms={cms.Modal}\n        // @ts-ignore\n        horses={horseData || []}\n        isOpen={isModalOpen}\n      />\n    </ListViewWrapper>\n  );\n}\n\nexport const ListView = ListViewComponent;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport AppLayout from \"../components/App/Layout\";\nimport { ListView } from \"../components/App/ListView\";\n\nexport default function IndexPage(props) {\n\n  return (\n    <AppLayout\n      title={\"Deine Pferde\"}\n      showNavigation={false}\n      location={props.location}\n      overflowY={\"hidden\"}\n      showGuideButton={true}\n    >\n      {/*// eslint-disable-next-line*/}\n      <ListView\n        cms={props.data[\"strapiListenansicht\"]}\n      />\n    </AppLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    strapiListenansicht {\n      Titel\n      Erklaerung\n      Platzhalter {\n        CTA\n        Button\n      }\n      Modal {\n        Input_Foto\n        Input_Foto_Aendern\n        Input_Name\n        Speichern\n        Abbrechen\n        Titel\n        Titel_Pferd_Bearbeiten\n        Alle_Felder\n        Pferd_Loeschen\n        Fehler\n        Kein_Bild\n      }\n    }\n  }\n`;\n"],"names":["HorseHead","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","xmlns","viewBox","d","LogoWrapper","styled","Logo","StaticQuery","query","render","data","G","image","logoBig","childImageSharp","gatsbyImageData","alt","ProfilePicWrapper","colors","spacing","small","w400","big","ListViewWrapper","dimensions","AddHorseForm","fontSize","color","borderRadius","TrashIcon","style","strokeLineJoin","width","height","points","x1","y1","x2","y2","Modal","closeModal","cms","isOpen","user","useSelector","state","auth","horseId","useParams","useHorseQuery","userId","id","refetchOnMountOrArgChange","skip","horseData","isFetching","isLoading","refetch","horseApi","initialState","name","profilePicture","useState","setState","fileInput","React","fileInputChange","setFileInputChange","message","setMessage","createHorse","useCreateHorseMutation","updateHorse","useUpdateHorseMutation","deleteHorse","useDeleteHorseMutation","useEffect","_pick","current","_fileInput$current","files","_fileInput$current2","reader","FileReader","onload","event","prevState","target","result","readAsDataURL","onSubmit","preventDefault","patch","then","error","Sentry","Fehler","response","status","Kein_Bild","Alle_Felder","onReset","className","Titel_Pferd_Bearbeiten","Titel","Hinweis","htmlFor","Input_Name","type","value","onChange","persist","onInputChange","Input_Foto","src","undefined","Input_Foto_Aendern","ref","accept","onClick","_context","display","marginTop","backgroundColor","border","alignItems","justifyContent","gap","cursor","Pferd_Loeschen","Button","Abbrechen","Speichern","HorseListWrapper","props","show","HorseUl","GatsbyImage","breakpoints","PlaceholderWrapper","Placeholder","openModal","CTA","EditIcon","PlusIcon","HorseList","horses","isModalOpen","dispatch","useDispatch","selectHorse","selectedHorse","setSelectedHorse","margin","Erklaerung","length","map","horse","index","key","Link","to","routes","console","log","Platzhalter","Object","keys","ListView","useAppDispatch","setIsModalOpen","useHorsesQuery","initialAppState","IndexPage","title","showNavigation","location","overflowY","showGuideButton"],"sourceRoot":""}