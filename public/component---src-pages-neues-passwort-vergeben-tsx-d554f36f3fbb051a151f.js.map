{"version":3,"file":"component---src-pages-neues-passwort-vergeben-tsx-d554f36f3fbb051a151f.js","mappings":"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","sources":["webpack://hufschuhapp.frontend/./src/pages/neues-passwort-vergeben.tsx","webpack://hufschuhapp.frontend/./src/components/App/Misc/Button.js","webpack://hufschuhapp.frontend/./src/constants/borderRadius.js","webpack://hufschuhapp.frontend/./src/constants/spacing.js"],"sourcesContent":["import React, { SyntheticEvent, useEffect, useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport axios from \"axios\";\nimport routes from \"../constants/routes\";\nimport styled from \"styled-components\";\nimport { spacing } from \"../constants/spacing\";\nimport { Button } from \"../components/App/Misc/Button\";\nimport {navigate} from \"gatsby\";\n\nconst SetNewPassword = styled.form`\n  padding: ${spacing.spaceMd};\n  max-width: 800px;\n\n  .input-group + .input-group {\n    margin-top: ${spacing.spaceSm};\n  }\n\n  .input-group {\n    display: flex;\n    flex-direction: column;\n\n    label {\n      font-weight: bold;\n    }\n\n    input {\n      padding: ${spacing.space2xs};\n    }\n  }\n\n\n  .button-row {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport default function NewPasswordPage({ location }: { location: any }) {\n  const [state, setState] = useState({\n    password: \"\",\n    passwordConfirmation: \"\",\n  });\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n\n  function onSubmit(event: SyntheticEvent) {\n    event.preventDefault();\n\n    // check password against guidelines\n    let rules = new RegExp(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\w\\W]{8,}$/\n    );\n    if (!rules.test(state.password)) {\n      setMessage(\n        \"Das Passwort muss mindestens 8 Zeichen enthalten, darunter mindestens eine Zahl, ein Groß- und ein Kleinbuchstabe.\"\n      );\n      setColor(\"red\");\n      return;\n    }\n\n    if (state.password !== state.passwordConfirmation) {\n      setMessage(\"Die Passwörter stimmen nicht überein.\");\n      setColor(\"red\");\n      return;\n    }\n\n    // get token from search params\n    const url = new URL(location.href);\n    const token = url.searchParams.get(\"token\");\n\n    axios\n      .post(routes.api.resetPassword, {\n        token,\n        password: state.password,\n      })\n      .then((response) => {\n        // Handle success.\n        setMessage(\"Dein Passwort wurde geändert.\");\n        setColor(\"green\");\n        setState({\n          password: \"\",\n          passwordConfirmation: \"\",\n        });\n        // TODO source form strapi\n      })\n      .catch((error) => {\n        // Handle error.\n        setMessage(\"Ein Fehler ist aufgetreten.\");\n        console.log(\"An error occurred:\", error.response);\n        setColor(\"red\");\n      });\n  }\n\n  function onChange(event: SyntheticEvent) {\n    event.persist();\n    setState((prevState) => ({\n      ...prevState,\n      // @ts-ignore\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  return (\n    <Layout>\n      <SetNewPassword onSubmit={onSubmit}>\n        <p>Hier kannst du ein neues Password vergeben.</p>\n        <div className={\"input-group\"}>\n          <label htmlFor={\"password-input\"}>Neues Passwort</label>\n          <input\n            type={\"password\"}\n            name={\"password\"}\n            id={\"password-input\"}\n            value={state.password}\n            onChange={(event) => onChange(event)}\n          />\n        </div>\n\n        <div className={\"input-group\"}>\n          <label htmlFor={\"password-confirmation-input\"}>\n            Passwort Bestätigen\n          </label>\n          <input\n            type={\"password\"}\n            name={\"passwordConfirmation\"}\n            id={\"password-confirmation-input\"}\n            value={state.passwordConfirmation}\n            onChange={(event) => onChange(event)}\n          />\n        </div>\n\n        <p style={{ color: color }}>{message}</p>\n\n        <div className={\"button-row\"}>\n          <Button\n              className={\"secondary\"}\n              type={\"button\"}\n              onClick={() => navigate(routes.login)}\n          >\n            Zurück\n          </Button>\n          <Button className={\"primary\"} type={\"submit\"}>\n            Senden\n          </Button>\n        </div>\n      </SetNewPassword>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { spacing } from \"../../../constants/spacing\";\nimport borderRadius from \"../../../constants/borderRadius\";\nimport colors from \"../../../constants/colors\";\nimport fontSize from \"../../../constants/typeScale\";\n\nexport const Button = styled.button`\n  padding: ${spacing.spaceXs};\n\n  background-color: white;\n  color: ${colors.primary[\"170\"]};\n  border-style: solid;\n  border-width: 1px;\n  border-radius: ${borderRadius.small};\n  font-size: ${fontSize.textMd};\n  letter-spacing: 0.12em;\n  cursor: pointer;\n\n  &.primary {\n    background-color: ${colors.pineGreen[\"80\"]};\n    color: white;\n    border-style: none;\n\n    box-shadow: ${colors.greys[\"700\"]} 2px 2px 5px;\n  }\n\n  // default\n  &.secondary {\n    background-color: white;\n    color: ${colors.pineGreen[\"80\"]};\n  }\n\n  &.inactive {\n    background-color: ${colors.greys[\"300\"]};\n    color: white;\n    border-style: none;\n\n    box-shadow: none;\n  }\n`;\n","const borderRadius = {\n  small: \"4px\",\n  medium: \"8px\",\n  large: \"12px\",\n};\n\nexport default borderRadius;\n","export const spacing = {\n  space4xs: \"2px\",\n  space3xs: \"4px\",\n  space2xs: \"8px\",\n  spaceXs: \"12px\",\n  spaceSm: \"16px\",\n  spaceMd: \"24px\",\n  spaceLg: \"32px\",\n  spaceXl: \"48px\",\n  space2xl: \"64px\",\n  space3xl: \"96px\",\n  space4xl: \"128px\",\n  space5xl: \"192px\",\n  space6xl: \"256px\",\n  space7xl: \"384px\",\n  space8xl: \"512px\",\n  space9xl: \"640px\",\n};\n"],"names":["SetNewPassword","styled","displayName","componentId","spacing","NewPasswordPage","location","state","setState","useState","password","passwordConfirmation","message","setMessage","color","setColor","onChange","event","persist","prevState","target","name","value","React","Layout","onSubmit","preventDefault","RegExp","test","token","URL","href","searchParams","get","axios","routes","then","response","catch","error","console","log","className","htmlFor","type","id","style","Button","onClick","navigate","colors","borderRadius","fontSize","small","medium","large","space4xs","space3xs","space2xs","spaceXs","spaceSm","spaceMd","spaceLg","spaceXl","space2xl","space3xl","space4xl","space5xl","space6xl","space7xl","space8xl","space9xl"],"sourceRoot":""}